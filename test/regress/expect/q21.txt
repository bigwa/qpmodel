select
	s_name,
	count(*) as numwait
from
	supplier,
	lineitem l1,
	orders,
	nation
where
	s_suppkey = l1.l_suppkey
	and o_orderkey = l1.l_orderkey
	and o_orderstatus = 'F'
	and l1.l_receiptdate > l1.l_commitdate
	and exists (
		select
			*
		from
			lineitem l2
		where
			l2.l_orderkey = l1.l_orderkey
			and l2.l_suppkey <> l1.l_suppkey
	)
	and not exists (
		select
			*
		from
			lineitem l3
		where
			l3.l_orderkey = l1.l_orderkey
			and l3.l_suppkey <> l1.l_suppkey
			and l3.l_receiptdate > l3.l_commitdate
	)
	and s_nationkey = n_nationkey
	and n_name = 'SAUDI ARABIA'
group by
	s_name
order by
	numwait desc,
	s_name
limit 100
PhysicLimit (100) (actual rows=0)
    Output: supplier.s_name[0],{count(*)(0)}[1]
    -> PhysicOrder  (actual rows=0)
        Output: supplier.s_name[0],{count(*)(0)}[1]
        Order by: {count(*)(0)}[1], supplier.s_name[0]
        -> PhysicHashAgg  (actual rows=0)
            Output: {supplier.s_name}[0],{count(*)(0)}[1]
            Aggregates: count(*)(0)
            Group by: supplier.s_name[0]
            -> PhysicFilter  (actual rows=0)
                Output: supplier.s_name[1]
                Filter: {#marker}[0]
                -> PhysicMarkJoin  (actual rows=0)
                    Output: #marker,supplier.s_name[0]
                    Filter: l3.l_orderkey[3]=l1.l_orderkey[1] and l3.l_suppkey[4]<>l1.l_suppkey[2]
                    -> PhysicFilter  (actual rows=0)
                        Output: supplier.s_name[1],l1.l_orderkey[2],l1.l_suppkey[3]
                        Filter: {#marker}[0]
                        -> PhysicMarkJoin  (actual rows=0)
                            Output: #marker,supplier.s_name[0],l1.l_orderkey[1],l1.l_suppkey[2]
                            Filter: l2.l_orderkey[3]=l1.l_orderkey[1] and l2.l_suppkey[4]<>l1.l_suppkey[2]
                            -> PhysicHashJoin  (actual rows=0)
                                Output: supplier.s_name[0],l1.l_orderkey[3],l1.l_suppkey[4]
                                Filter: supplier.s_suppkey[1]=l1.l_suppkey[4] and supplier.s_nationkey[2]=nation.n_nationkey[5]
                                -> PhysicScanTable supplier (actual rows=0)
                                    Output: supplier.s_name[1],supplier.s_suppkey[0],supplier.s_nationkey[3]
                                    Filter: true
                                -> PhysicNLJoin  (actual rows=0)
                                    Output: l1.l_orderkey[1],l1.l_suppkey[2],nation.n_nationkey[0]
                                    -> PhysicScanTable nation (actual rows=0)
                                        Output: nation.n_nationkey[0]
                                        Filter: nation.n_name[1]='SAUDI ARABIA'
                                    -> PhysicHashJoin  (actual rows=0)
                                        Output: l1.l_orderkey[1],l1.l_suppkey[2]
                                        Filter: orders.o_orderkey[0]=l1.l_orderkey[1]
                                        -> PhysicScanTable orders (actual rows=0)
                                            Output: orders.o_orderkey[0]
                                            Filter: orders.o_orderstatus[2]='F'
                                        -> PhysicScanTable lineitem as l1 (actual rows=0)
                                            Output: l1.l_orderkey[0],l1.l_suppkey[2]
                                            Filter: l1.l_receiptdate[12]>l1.l_commitdate[11]
                            -> PhysicScanTable lineitem as l2 (actual rows=0)
                                Output: l2.l_orderkey[0],l2.l_suppkey[2]
                    -> PhysicScanTable lineitem as l3 (actual rows=0)
                        Output: l3.l_orderkey[0],l3.l_suppkey[2]
                        Filter: l3.l_receiptdate[12]>l3.l_commitdate[11]


